name: 'publish'

on:
  push:
    branches:
      - main

    paths:
      - 'src-tauri/tauri.conf.json'

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 拉取完整提交历史

      - name: 设置node环境
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: 安装rust工具链
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: ubuntu 安装依赖
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 适用于 Tauri v1 - webkitgtk 4.1 适用于 Tauri v2.
      
      # 添加Java环境设置（仅Ubuntu）
      - name: 设置Java环境
        if: matrix.platform == 'ubuntu-22.04'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '22'
          cache: 'maven'
      
      # 添加Maven打包步骤（仅Ubuntu）
      - name: 打包后端Jar
        if: matrix.platform == 'ubuntu-22.04'
        working-directory: server/
        run: |
          mvn clean package -DskipTests
          mkdir -p ../release
          cp target/*.jar ../release/

      - name: 安装pnpm
        run: npm install -g pnpm

      - name: 安装前端依赖
        working-directory: admin/
        run: pnpm install

      - name: 获取最近的提交信息 (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "COMMITS<<EOF" | Out-File -Append -Encoding utf8 $env:GITHUB_ENV
          git log --oneline -n 15 | Out-File -Append -Encoding utf8 $env:GITHUB_ENV
          echo "EOF" | Out-File -Append -Encoding utf8 $env:GITHUB_ENV
      
      - name: 获取最近的提交信息 (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          echo "COMMITS<<EOF" >> $GITHUB_ENV
          git log --oneline -n 15 >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: 打印提交信息
        run: |
          echo "最近 15 条提交信息："
          echo "${{ env.COMMITS }}"
      
      # 上传JAR文件作为构建产物（仅Ubuntu）
      - name: 上传JAR文件
        if: matrix.platform == 'ubuntu-22.04'
        uses: actions/upload-artifact@v3
        with:
          name: backend-jar
          path: release/*.jar
          retention-days: 5
          
      # 添加学生端打包步骤（仅Ubuntu）
      - name: 打包学生端应用
        if: matrix.platform == 'ubuntu-22.04'
        working-directory: admin/
        run: |
          pnpm dev:student
          cp student/dist.zip ../release/student-dist.zip
          
      # 上传学生端应用作为构建产物（仅Ubuntu）
      - name: 上传学生端应用
        if: matrix.platform == 'ubuntu-22.04'
        uses: actions/upload-artifact@v3
        with:
          name: student-app
          path: release/student-dist.zip
          retention-days: 5

      - name: 开始打包应用
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: |
            ## 最近更新：
            ${{ env.COMMITS }}
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}